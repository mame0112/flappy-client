<?xml version="1.0" encoding="UTF-8"?>
<project
    name="sample"
    basedir="."
    default="dist" >

    <property file="local.properties" />

    <property file="ant.properties" />

    <description>
		And sample
    </description>
    <!-- Mainのビルドとjarファイルの作成に必要な情報 -->

    <property
        name="libs"
        location="libs" />

    <property
        name="src"
        location="src" />

    <property
        name="build"
        location="build" />

    <property
        name="dist"
        location="dist" />
    <!-- MainTestのビルドに必要な情報 -->

    <property
        name="test.src"
        location="FlappyTestTest/" />

    <property
        name="test.build"
        location="testbuild" />

    <property
        name="test.class.name"
        value="com.mame.flappy.test.ConversationActivityTest" />

    <path id="test.classpath" >

        <pathelement location="${build}" />

        <pathelement location="${test.build}" />

        <pathelement location="lib/junit-4.10.jar" />
    </path>

    <!--  -->

    <property environment="env" />

    <condition
        property="sdk.dir"
        value="${env.ANDROID_HOME}" >

        <isset property="env.ANDROID_HOME" />
    </condition>

    <loadproperties srcFile="project.properties" />

    <!--  -->

    <target name="init" >

        <!-- Create the time stamp -->
        <tstamp />
        <mkdir dir="${build}" />
        <mkdir dir="${test.build}" />

        <mkdir dir="bin/classes"/>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin/classes">
            <fileset dir="gen">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        
    </target>

    <target
        name="compile"
        depends="init"
        description="compile the source " >

        <path id="jar.classpath" >
	        <pathelement location="bin/classes"/>
            <pathelement location="${libs}/sqlcipher.jar" />
	        <pathelement location="${libs}/libGoogleAnalyticsServices.jar"/>
	        <pathelement location="${libs}/gcm.jar"/>
	        <pathelement location="${libs}/android-support-v4.jar"/>
	        <pathelement location="${env.ANDROID_HOME}/extras/google/google_play_services/libproject/google-play-services_lib/libs/google-play-services.jar"/>
            <pathelement location="${env.ANDROID_HOME}/platforms/android-19/android.jar" />
        </path>

        <!-- Mainをビルドし、buildフォルダに出力 -->

        <javac
            classpathref="jar.classpath"
            destdir="${build}"
            includeAntRuntime="no"
            srcdir="${src}" />


        <!-- MainTestをビルドし、testbuildフォルダに出力 -->
        <javac
            classpathref="jar.classpath"
            destdir="${test.build}"
            includeAntRuntime="no"
            srcdir="${test.src}" >

            <classpath refid="test.classpath" />
        </javac>
    </target>

    <target
        name="test"
        depends="compile"
        description="test the source " >

        <!-- JUnitによるテストを実行 -->
        
        <junit
            fork="yes"
            haltonfailure="yes" >

            <test name="${test.class.name}" />

            <formatter
                type="plain"
                usefile="false" />

            <classpath refid="test.classpath" />
            <classpath refid="jar.classpath" />
        </junit>
    </target>

    <target
        name="dist"
        depends="test"
        description="generate the distribution" >

        <!-- jarファイルの出力先ディレクトリを作成 -->

        <mkdir dir="${dist}" />
        <!-- sample-yyyymmdd.jarという名前でjarファイルを作成 -->

        <jar
            basedir="${build}"
            jarfile="${dist}/sample-${DSTAMP}.jar" >

            <manifest>

                <attribute
                    name="Main-Class"
                    value="sample.Main" />
            </manifest>
        </jar>
    </target>

    <target
        name="clean"
        description="clean up" >

        <!-- Delete the ${build} and ${dist} directory trees -->

        <delete dir="${build}" />

        <delete dir="${test.build}" />

        <delete dir="${dist}" />
    </target>

</project>